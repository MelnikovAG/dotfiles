# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'sainnhe/tmux-fzf'

# Shell
set-option -g default-shell /bin/zsh

# Fix copying
if-shell 'test "$(uname -s)" = Darwin' \
    'set -g default-command "exec reattach-to-user-namespace -l $SHELL"' \
    'set -g set-clipboard on'

# Respond to non-alphanumeric chars faster (e.g. in Vim)
# Rationale: https://github.com/tmux/tmux/issues/907 search "escape-time"
set -s escape-time 10

# Required for vim-gitgutter
set -g focus-events on

# More sensible window splitting & creation
bind '"' split-window -v -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Make a nice grid of four windows. Mnemonic: "quad"
bind Q split-window -h -c "#{pane_current_path}" \; \
  split-window -v -c "#{pane_current_path}" \; \
  select-pane -L \; \
  split-window -v -c "#{pane_current_path}"

bind A set-window-option synchronize-panes # 'a' for 'all'

# Create session with name
bind C command-prompt -p 'Create or switch to session name:' 'new-session -As %%'
# Create session with name & run process
bind R command-prompt -p 'Create session name:','Run process:' 'new-session -s %1 %2'

# Use this to switch to the window running a given PID. Useful for tracking down
# open files in Vim!
bind W command-prompt -p "Switch to pane with pid:" "run-shell 'pane=\$(ps eww %% | sed \"1d; s/^.*TMUX_PANE=//;s/ .*//\"); [[ -z \$pane ]] && tmux display-message \"could not find pid\" || tmux switch-client -t \$pane'"

set -g default-terminal "tmux-256color"

# Status bar
set -g status-justify centre
set -g status-left "#S"
set -g status-right "« #h: #W »"
setw -g status-fg colour16
setw -g status-bg colour8
setw -g window-status-format '#[bg=colour8]#[fg=colour4]#I:#[fg=colour16]#W (#(echo "#{pane_current_path}" | rev | cut -d'/' -f-2 | rev)) #F#[fg=colour4]'
setw -g window-status-current-format '#[bg=colour0]#[fg=colour7]#I:#W (#(echo "#{pane_current_path}" | rev | cut -d'/' -f-2 | rev)) #F'
set-option -g allow-rename off
set-option -g renumber-windows on
set -g base-index 1
set -g pane-base-index 1

set -g detach-on-destroy off

# Let panes remain in place when their command exits.
set -g remain-on-exit on
# When a pane's command exits, check if it's the final pane in the session.
# If so, respawn; else kill the pane.
# Credit to nicm on Freenode #tmux.
set-hook -g pane-died "if -F '#{&&:#{==:#{session_windows},1},#{==:#{window_panes},1}}' 'respawn-pane' 'kill-pane'"

# Screen behaviour
set -g history-limit 40000

# Mouse mode!
set -g mouse on

# Vim mode!
set -g mode-keys vi
unbind h
bind h if-shell -F "#{window_zoomed_flag}" 'select-pane -L; resize-pane -Z' 'select-pane -L'
unbind j
bind j if-shell -F "#{window_zoomed_flag}" 'select-pane -D; resize-pane -Z' 'select-pane -D'
unbind k
bind k if-shell -F "#{window_zoomed_flag}" 'select-pane -U; resize-pane -Z' 'select-pane -U'
unbind l
bind l if-shell -F "#{window_zoomed_flag}" 'select-pane -R; resize-pane -Z' 'select-pane -R'
bind Escape copy-mode

bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'V' send -X select-line
bind -T copy-mode-vi 'r' send -X rectangle-toggle
bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# Keep this at the bottom!
run -b '~/.tmux/plugins/tpm/tpm'
